{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { useState, useEffect } from \"react\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { useNavigation, useRoute, useIsFocused } from \"@react-navigation/native\";\nimport OutlinedButton from \"../UI/OutlinedButton\";\nimport { getCurrentPositionAsync, useForegroundPermissions, PermissionStatus } from \"expo-location\";\nimport { getAddress, getMapPreview } from \"../../util/location\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction LocationPicker(_ref) {\n  var onPickLocation = _ref.onPickLocation;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      pickedLocation = _useState2[0],\n      setPickedLocation = _useState2[1];\n\n  var isFocused = useIsFocused();\n  var navigation = useNavigation();\n  var route = useRoute();\n\n  var _useForegroundPermiss = useForegroundPermissions(),\n      _useForegroundPermiss2 = _slicedToArray(_useForegroundPermiss, 2),\n      locationPermissionInformation = _useForegroundPermiss2[0],\n      requestPermission = _useForegroundPermiss2[1];\n\n  useEffect(function () {\n    if (isFocused && route.params) {\n      var mapPickedLocation = {\n        lat: route.params.pickedLat,\n        lng: route.params.pickedLng\n      };\n      setPickedLocation(mapPickedLocation);\n    }\n  }, [route, isFocused]);\n  useEffect(function () {\n    function handleLocation() {\n      var address;\n      return _regeneratorRuntime.async(function handleLocation$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!pickedLocation) {\n                _context.next = 5;\n                break;\n              }\n\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(getAddress(pickedLocation.lat, pickedLocation.lng));\n\n            case 3:\n              address = _context.sent;\n              onPickLocation(_objectSpread(_objectSpread({}, pickedLocation), {}, {\n                address: address\n              }));\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    handleLocation();\n  }, [pickedLocation, onPickLocation]);\n\n  function verifyPermissions() {\n    var permissionResponse;\n    return _regeneratorRuntime.async(function verifyPermissions$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!(locationPermissionInformation.status === PermissionStatus.UNDETERMINED)) {\n              _context2.next = 5;\n              break;\n            }\n\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(requestPermission());\n\n          case 3:\n            permissionResponse = _context2.sent;\n            return _context2.abrupt(\"return\", permissionResponse.granted);\n\n          case 5:\n            if (!(locationPermissionInformation.status === PermissionStatus.DENIED)) {\n              _context2.next = 8;\n              break;\n            }\n\n            Alert.alert(\"Access Denied\", \"Grant location permissions\");\n            return _context2.abrupt(\"return\", false);\n\n          case 8:\n            return _context2.abrupt(\"return\", true);\n\n          case 9:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function getLocationHandler() {\n    var hasPermission, location;\n    return _regeneratorRuntime.async(function getLocationHandler$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(verifyPermissions());\n\n          case 2:\n            hasPermission = _context3.sent;\n\n            if (hasPermission) {\n              _context3.next = 5;\n              break;\n            }\n\n            return _context3.abrupt(\"return\");\n\n          case 5:\n            _context3.next = 7;\n            return _regeneratorRuntime.awrap(getCurrentPositionAsync());\n\n          case 7:\n            location = _context3.sent;\n            setPickedLocation({\n              lat: location.coords.latitude,\n              lng: location.coords.longitude\n            });\n\n          case 9:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function pickOnMapHandler() {\n    navigation.navigate(\"Map\");\n  }\n\n  var locationPreview = _jsx(Text, {\n    children: \"No Location picked yet\"\n  });\n\n  if (pickedLocation) {\n    locationPreview = _jsx(Image, {\n      style: styles.image,\n      source: {\n        uri: getMapPreview(pickedLocation.lat, pickedLocation.lng)\n      }\n    });\n  }\n\n  return _jsxs(View, {\n    children: [_jsx(View, {\n      style: styles.mapPreview,\n      children: locationPreview\n    }), _jsxs(View, {\n      style: styles.actions,\n      children: [_jsx(OutlinedButton, {\n        icon: \"location\",\n        onPress: getLocationHandler,\n        children: \"My Location\"\n      }), _jsx(OutlinedButton, {\n        icon: \"map\",\n        onPress: pickOnMapHandler,\n        children: \"Pick on Map\"\n      })]\n    })]\n  });\n}\n\nexport default LocationPicker;\nvar styles = StyleSheet.create({\n  mapPreview: {\n    width: \"90%\",\n    height: 250,\n    marginVertical: 38,\n    marginHorizontal: 18,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"white\",\n    borderRadius: 25,\n    elevation: 3.3\n  },\n  actions: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    alignItems: \"center\"\n  },\n  image: {\n    width: \"100%\",\n    height: \"100%\",\n    borderRadius: 10\n  }\n});","map":{"version":3,"sources":["C:/Users/jimpe/Desktop/react_native_apps/BarcelonaApp/Components/Places/LocationPicker.jsx"],"names":["useState","useEffect","useNavigation","useRoute","useIsFocused","OutlinedButton","getCurrentPositionAsync","useForegroundPermissions","PermissionStatus","getAddress","getMapPreview","LocationPicker","onPickLocation","pickedLocation","setPickedLocation","isFocused","navigation","route","locationPermissionInformation","requestPermission","params","mapPickedLocation","lat","pickedLat","lng","pickedLng","handleLocation","address","verifyPermissions","status","UNDETERMINED","permissionResponse","granted","DENIED","Alert","alert","getLocationHandler","hasPermission","location","coords","latitude","longitude","pickOnMapHandler","navigate","locationPreview","styles","image","uri","mapPreview","actions","StyleSheet","create","width","height","marginVertical","marginHorizontal","justifyContent","alignItems","backgroundColor","borderRadius","elevation","flexDirection"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\"\r\nimport { Alert, View, Button, StyleSheet, Image, Text} from 'react-native'\r\nimport { useNavigation, useRoute, useIsFocused } from \"@react-navigation/native\"\r\n\r\nimport OutlinedButton from \"../UI/OutlinedButton\"\r\nimport { getCurrentPositionAsync, useForegroundPermissions, PermissionStatus } from \"expo-location\"\r\nimport  { getAddress, getMapPreview } from \"../../util/location\"\r\n\r\n\r\nfunction LocationPicker({ onPickLocation }) {\r\n    const [pickedLocation, setPickedLocation] = useState()\r\n    const isFocused = useIsFocused()\r\n\r\n    const navigation = useNavigation()\r\n    const route = useRoute()\r\n\r\n    const [locationPermissionInformation, requestPermission] = useForegroundPermissions()\r\n\r\n  \r\n    useEffect(() => {\r\n        if (isFocused && route.params) {\r\n            const mapPickedLocation = {\r\n                lat: route.params.pickedLat, \r\n                lng: route.params.pickedLng,\r\n            }\r\n            setPickedLocation(mapPickedLocation)\r\n        }\r\n    }, [route, isFocused])\r\n\r\n    useEffect(() => {\r\n        async function handleLocation() {\r\n\r\n            if (pickedLocation) {\r\n                const address = await getAddress(pickedLocation.lat, pickedLocation.lng)\r\n                onPickLocation({...pickedLocation, address: address})\r\n            }\r\n        }\r\n\r\n        handleLocation()\r\n    }, [pickedLocation, onPickLocation])\r\n\r\n    async function verifyPermissions() {\r\n        if (locationPermissionInformation.status === PermissionStatus.UNDETERMINED) {\r\n            const permissionResponse = await requestPermission()  \r\n   \r\n            return permissionResponse.granted \r\n         }\r\n   \r\n         if (locationPermissionInformation.status === PermissionStatus.DENIED) {\r\n             Alert.alert(\r\n                 \"Access Denied\", \"Grant location permissions\"\r\n             );\r\n             return false;\r\n         }\r\n         return true;\r\n    }\r\n\r\n    async function getLocationHandler() {\r\n        const hasPermission = await verifyPermissions()\r\n\r\n        if (!hasPermission) {\r\n            return;\r\n        }\r\n\r\n        const location = await getCurrentPositionAsync()\r\n            setPickedLocation({\r\n                lat: location.coords.latitude,\r\n                lng: location.coords.longitude,\r\n        });\r\n    }\r\n\r\n    function pickOnMapHandler() {\r\n        navigation.navigate(\"Map\")\r\n    }\r\n\r\n    let locationPreview = (\r\n    <Text>No Location picked yet</Text>\r\n    )\r\n\r\n\r\n    if (pickedLocation) {\r\n        locationPreview = (\r\n            <Image \r\n                style={styles.image}\r\n                source={{ \r\n                    uri: getMapPreview(pickedLocation.lat, pickedLocation.lng)\r\n                }} \r\n            />\r\n        );\r\n    }\r\n\r\n\r\n  return (\r\n        <View>\r\n            <View style={styles.mapPreview}>{locationPreview}</View>\r\n            <View style={styles.actions}>\r\n                <OutlinedButton icon=\"location\" onPress={getLocationHandler}>\r\n                    My Location\r\n                </OutlinedButton>\r\n                <OutlinedButton icon=\"map\" onPress={pickOnMapHandler}>\r\n                    Pick on Map\r\n                </OutlinedButton>\r\n            </View>\r\n        </View>\r\n  )\r\n}\r\n\r\nexport default LocationPicker\r\n\r\nconst styles = StyleSheet.create({\r\n    mapPreview: {\r\n        width: \"90%\",\r\n        height: 250,\r\n        marginVertical: 38,\r\n        marginHorizontal: 18,\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        backgroundColor: \"white\",\r\n        borderRadius: 25,\r\n        elevation: 3.3\r\n    },\r\n    actions: {\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-around\",\r\n        alignItems: \"center\",\r\n    },\r\n    image: {\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        borderRadius: 10,\r\n    },\r\n\r\n})"]},"metadata":{},"sourceType":"module"}