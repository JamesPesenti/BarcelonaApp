{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState, useCallback } from \"react\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Colors } from \"../../constants/colors\";\nimport ImagePicker from \"../Places/ImagePicker\";\nimport LocationPicker from \"../Places/LocationPicker\";\nimport Button from \"../UI/Button\";\nimport { Place } from \"../../Models/place\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction PlaceForm(_ref) {\n  var onCreatePlace = _ref.onCreatePlace;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      enteredTitle = _useState2[0],\n      setEnteredTitle = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      pickedLocation = _useState4[0],\n      setPickedLocation = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      selectedImage = _useState6[0],\n      setSelectedImage = _useState6[1];\n\n  function changeTitleHandler(enteredText) {\n    setEnteredTitle(enteredText);\n  }\n\n  function takeImageHandler(_ref2) {\n    var imageUri = _ref2.imageUri;\n    setSelectedImage(imageUri);\n  }\n\n  var pickLocationHandler = useCallback(function (location) {\n    setPickedLocation(location);\n  }, []);\n\n  function savePlaceHandler() {\n    var placeData = new Place(enteredTitle, selectedImage, pickedLocation);\n    onCreatePlace(placeData);\n  }\n\n  return _jsxs(ScrollView, {\n    children: [_jsxs(View, {\n      style: styles.form,\n      children: [_jsx(Text, {\n        style: styles.label,\n        children: \"Name Of Place\"\n      }), _jsx(TextInput, {\n        style: styles.input,\n        onChangeText: changeTitleHandler,\n        value: enteredTitle\n      })]\n    }), _jsx(ImagePicker, {\n      onTakeImage: takeImageHandler\n    }), _jsx(LocationPicker, {\n      onPickLocation: pickLocationHandler\n    }), _jsx(Button, {\n      onPress: savePlaceHandler,\n      children: \"Add Place\"\n    })]\n  });\n}\n\nexport default PlaceForm;\nvar styles = StyleSheet.create({\n  form: {\n    flex: 1,\n    padding: 24\n  },\n  label: {\n    fontWeight: \"bold\",\n    marginBottom: 4,\n    color: Colors.primary500,\n    textAlign: \"center\"\n  },\n  input: {\n    marginVertical: 8,\n    paddingHorizontal: 4,\n    paddingVertical: 8,\n    fontSize: 16,\n    borderBottomColor: Colors.primary400,\n    borderBottomWidth: 2\n  }\n});","map":{"version":3,"sources":["C:/Users/jimpe/Desktop/react_native_apps/BarcelonaApp/Components/Places/PlaceForm.jsx"],"names":["useState","useCallback","Colors","ImagePicker","LocationPicker","Button","Place","PlaceForm","onCreatePlace","enteredTitle","setEnteredTitle","pickedLocation","setPickedLocation","selectedImage","setSelectedImage","changeTitleHandler","enteredText","takeImageHandler","imageUri","pickLocationHandler","location","savePlaceHandler","placeData","styles","form","label","input","StyleSheet","create","flex","padding","fontWeight","marginBottom","color","primary500","textAlign","marginVertical","paddingHorizontal","paddingVertical","fontSize","borderBottomColor","primary400","borderBottomWidth"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,WAAnB,QAAsC,OAAtC;;;;;;;AAEA,SAASC,MAAT;AACA,OAAOC,WAAP;AACA,OAAOC,cAAP;AACA,OAAOC,MAAP;AACA,SAASC,KAAT;;;;AAEA,SAASC,SAAT,OAAoC;AAAA,MAAhBC,aAAgB,QAAhBA,aAAgB;;AAEhC,kBAAwCR,QAAQ,CAAC,EAAD,CAAhD;AAAA;AAAA,MAAOS,YAAP;AAAA,MAAqBC,eAArB;;AACA,mBAA4CV,QAAQ,EAApD;AAAA;AAAA,MAAOW,cAAP;AAAA,MAAuBC,iBAAvB;;AACA,mBAA0CZ,QAAQ,EAAlD;AAAA;AAAA,MAAOa,aAAP;AAAA,MAAsBC,gBAAtB;;AAEA,WAASC,kBAAT,CAA4BC,WAA5B,EAAyC;AACrCN,IAAAA,eAAe,CAACM,WAAD,CAAf;AACH;;AAED,WAASC,gBAAT,QAAsC;AAAA,QAAXC,QAAW,SAAXA,QAAW;AAClCJ,IAAAA,gBAAgB,CAACI,QAAD,CAAhB;AACH;;AAED,MAAMC,mBAAmB,GAAGlB,WAAW,CAAC,UAACmB,QAAD,EAAc;AAClDR,IAAAA,iBAAiB,CAACQ,QAAD,CAAjB;AACC,GAFkC,EAEhC,EAFgC,CAAvC;;AAIA,WAASC,gBAAT,GAA4B;AACxB,QAAMC,SAAS,GAAG,IAAIhB,KAAJ,CAAUG,YAAV,EAAwBI,aAAxB,EAAuCF,cAAvC,CAAlB;AACAH,IAAAA,aAAa,CAACc,SAAD,CAAb;AACH;;AAEH,SACE,MAAC,UAAD;AAAA,eACI,MAAC,IAAD;AAAM,MAAA,KAAK,EAAEC,MAAM,CAACC,IAApB;AAAA,iBACI,KAAC,IAAD;AAAM,QAAA,KAAK,EAAED,MAAM,CAACE,KAApB;AAAA;AAAA,QADJ,EAEI,KAAC,SAAD;AACI,QAAA,KAAK,EAAEF,MAAM,CAACG,KADlB;AAEI,QAAA,YAAY,EAAEX,kBAFlB;AAGI,QAAA,KAAK,EAAEN;AAHX,QAFJ;AAAA,MADJ,EASI,KAAC,WAAD;AAAa,MAAA,WAAW,EAAEQ;AAA1B,MATJ,EAUI,KAAC,cAAD;AAAgB,MAAA,cAAc,EAAEE;AAAhC,MAVJ,EAWI,KAAC,MAAD;AAAQ,MAAA,OAAO,EAAEE,gBAAjB;AAAA;AAAA,MAXJ;AAAA,IADF;AAeD;;AAED,eAAed,SAAf;AAEA,IAAMgB,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC7BJ,EAAAA,IAAI,EAAE;AACFK,IAAAA,IAAI,EAAE,CADJ;AAEFC,IAAAA,OAAO,EAAE;AAFP,GADuB;AAM7BL,EAAAA,KAAK,EAAE;AACHM,IAAAA,UAAU,EAAE,MADT;AAEHC,IAAAA,YAAY,EAAE,CAFX;AAGHC,IAAAA,KAAK,EAAE/B,MAAM,CAACgC,UAHX;AAIHC,IAAAA,SAAS,EAAE;AAJR,GANsB;AAY7BT,EAAAA,KAAK,EAAE;AACHU,IAAAA,cAAc,EAAE,CADb;AAEHC,IAAAA,iBAAiB,EAAE,CAFhB;AAGHC,IAAAA,eAAe,EAAE,CAHd;AAIHC,IAAAA,QAAQ,EAAE,EAJP;AAKHC,IAAAA,iBAAiB,EAAEtC,MAAM,CAACuC,UALvB;AAMHC,IAAAA,iBAAiB,EAAE;AANhB;AAZsB,CAAlB,CAAf","sourcesContent":["import { useState, useCallback } from \"react\"\r\nimport { Alert, View, Text, TextInput, ScrollView, StyleSheet} from 'react-native'\r\nimport { Colors } from \"../../constants/colors\"\r\nimport ImagePicker from \"../Places/ImagePicker\"\r\nimport LocationPicker from \"../Places/LocationPicker\"\r\nimport Button from \"../UI/Button\"\r\nimport { Place } from \"../../Models/place\"\r\n\r\nfunction PlaceForm({onCreatePlace}) {\r\n    // registers key strokes in input form\r\n    const [enteredTitle, setEnteredTitle] = useState(\"\")\r\n    const [pickedLocation, setPickedLocation] = useState()\r\n    const [selectedImage, setSelectedImage] = useState()\r\n\r\n    function changeTitleHandler(enteredText) {\r\n        setEnteredTitle(enteredText)\r\n    }\r\n\r\n    function takeImageHandler({imageUri}) {\r\n        setSelectedImage(imageUri)\r\n    }\r\n\r\n    const pickLocationHandler = useCallback((location) => {\r\n        setPickedLocation(location)\r\n        }, [])\r\n\r\n    function savePlaceHandler() {\r\n        const placeData = new Place(enteredTitle, selectedImage, pickedLocation)\r\n        onCreatePlace(placeData)\r\n    }\r\n    \r\n  return (\r\n    <ScrollView >\r\n        <View style={styles.form}>\r\n            <Text style={styles.label}>Name Of Place</Text>\r\n            <TextInput \r\n                style={styles.input}\r\n                onChangeText={changeTitleHandler} \r\n                value={enteredTitle}\r\n            />\r\n        </View>\r\n        <ImagePicker onTakeImage={takeImageHandler}  />\r\n        <LocationPicker onPickLocation={pickLocationHandler}  />\r\n        <Button onPress={savePlaceHandler} >Add Place</Button>\r\n    </ScrollView>\r\n  )\r\n}\r\n\r\nexport default PlaceForm\r\n\r\nconst styles = StyleSheet.create({\r\n    form: {\r\n        flex: 1,\r\n        padding: 24,\r\n        // backgroundColor: \"green\",\r\n    },\r\n    label: {\r\n        fontWeight: \"bold\",\r\n        marginBottom: 4,\r\n        color: Colors.primary500,\r\n        textAlign: \"center\",\r\n    },\r\n    input: {\r\n        marginVertical: 8,\r\n        paddingHorizontal: 4,\r\n        paddingVertical: 8,\r\n        fontSize: 16,\r\n        borderBottomColor: Colors.primary400,\r\n        borderBottomWidth: 2\r\n    },\r\n})\r\n"]},"metadata":{},"sourceType":"module"}