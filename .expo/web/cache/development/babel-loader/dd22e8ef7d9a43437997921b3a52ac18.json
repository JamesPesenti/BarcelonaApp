{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { launchCameraAsync } from \"expo-image-picker\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nfunction ImagePicker() {\n  function takeImageHandler() {\n    var image;\n    return _regeneratorRuntime.async(function takeImageHandler$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(launchCameraAsync({\n              allowsEditing: true,\n              aspect: [16, 9],\n              quality: 0.5\n            }));\n\n          case 2:\n            image = _context.sent;\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  return _jsx(_Fragment, {\n    children: _jsxs(View, {\n      children: [_jsx(View, {}), _jsx(Button, {\n        tilte: \"Take Image\",\n        onPress: takeImageHandler\n      })]\n    })\n  });\n}\n\nexport default ImagePicker;","map":{"version":3,"names":["launchCameraAsync","ImagePicker","takeImageHandler","allowsEditing","aspect","quality","image"],"sources":["C:/Users/jimpe/Desktop/react_native_apps/BarcelonaApp/Components/Places/ImagePicker.jsx"],"sourcesContent":["import { View, Text, Button, StyleSheet} from 'react-native'\r\nimport { launchCameraAsync } from \"expo-image-picker\"\r\n\r\n\r\nfunction ImagePicker() {\r\n  async function takeImageHandler() {\r\n      const image = await launchCameraAsync({\r\n          allowsEditing: true,\r\n          aspect: [16, 9],\r\n          quality: 0.5,\r\n          \r\n      })\r\n    }\r\n\r\n  return (\r\n  <>\r\n    <View>\r\n        <View>\r\n\r\n        </View>\r\n        <Button tilte=\"Take Image\" onPress={takeImageHandler} />\r\n    </View>\r\n  </>\r\n  )\r\n}\r\n\r\nexport default ImagePicker"],"mappings":";;;;;AACA,SAASA,iBAAT,QAAkC,mBAAlC;;;;;AAGA,SAASC,WAAT,GAAuB;EACrB,SAAeC,gBAAf;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA,iCACwBF,iBAAiB,CAAC;cAClCG,aAAa,EAAE,IADmB;cAElCC,MAAM,EAAE,CAAC,EAAD,EAAK,CAAL,CAF0B;cAGlCC,OAAO,EAAE;YAHyB,CAAD,CADzC;;UAAA;YACUC,KADV;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA;;EASA,OACA;IAAA,UACE,MAAC,IAAD;MAAA,WACI,KAAC,IAAD,KADJ,EAII,KAAC,MAAD;QAAQ,KAAK,EAAC,YAAd;QAA2B,OAAO,EAAEJ;MAApC,EAJJ;IAAA;EADF,EADA;AAUD;;AAED,eAAeD,WAAf"},"metadata":{},"sourceType":"module"}