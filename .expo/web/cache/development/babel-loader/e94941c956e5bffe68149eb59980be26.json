{"ast":null,"code":"import { StatusBar } from 'expo-status-bar';\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport IconButton from \"./Components/UI/IconButton\";\nimport SpainIcon from \"./Components/UI/SpainIcon\";\nimport { Colors } from \"./constants/colors\";\nimport { useEffect, useState } from \"react\";\nimport AppLoading from \"expo-app-loading\";\nimport HomeScreen from \"./Screens/HomeScreen\";\nimport GaudiScreen from \"./Screens/GaudiScreen\";\nimport AllPlaces from \"./Screens/AllPlaces\";\nimport AddPlace from \"./Screens/AddPlace\";\nimport Map from \"./Screens/Map\";\nimport PlaceDetails from \"./Screens/PlaceDetails\";\nimport { init } from \"./util/database\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nexport default function App() {\n  return _jsxs(_Fragment, {\n    children: [_jsx(StatusBar, {\n      style: \"light\"\n    }), _jsx(NavigationContainer, {\n      children: _jsxs(Stack.Navigator, {\n        screenOptions: {\n          headerStyle: {\n            opacity: .3,\n            backgroundColor: Colors.primary500\n          },\n          headerTintColor: \"white\",\n          headerTitleStyle: {\n            allignItems: \"center\",\n            fontWeight: \"600\"\n          },\n          headerTitleAlign: \"center\"\n        },\n        children: [_jsx(Stack.Screen, {\n          name: \"Barcelona App\",\n          component: HomeScreen,\n          screenOptions: {\n            headerStyle: {\n              opacity: .5\n            }\n          },\n          options: function options(_ref) {\n            var navigation = _ref.navigation;\n            return {\n              title: \"  Visit Barcelona!\",\n              headerLeft: function headerLeft(_ref2) {\n                var tintColor = _ref2.tintColor;\n                return _jsx(SpainIcon, {\n                  onPress: function onPress() {\n                    return navigation.navigate(\"AllPlaces\");\n                  }\n                });\n              }\n            };\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"Gaudi's Works\",\n          component: GaudiScreen,\n          options: function options(_ref3) {\n            var navigation = _ref3.navigation;\n            return {\n              title: \"Explore Antoni Gaudi's Works\",\n              header: function header(_ref4) {\n                var tintColor = _ref4.tintColor;\n                return _jsx(IconButton, {\n                  icon: \"heart\",\n                  size: 30,\n                  color: tintColor,\n                  onPress: function onPress() {\n                    return navigation.navigate(\"GaudiScreen\");\n                  }\n                });\n              }\n            };\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"AllPlaces\",\n          component: AllPlaces,\n          options: function options(_ref5) {\n            var navigation = _ref5.navigation;\n            return {\n              title: \"Your Favorite Places\",\n              headerRight: function headerRight(_ref6) {\n                var tintColor = _ref6.tintColor;\n                return _jsx(IconButton, {\n                  icon: \"add\",\n                  size: 24,\n                  color: tintColor,\n                  onPress: function onPress() {\n                    return navigation.navigate(\"AddPlace\");\n                  }\n                });\n              }\n            };\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"AddPlace\",\n          component: AddPlace,\n          options: {\n            title: \"Add a new Place\"\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"Map\",\n          component: Map,\n          options: {\n            title: \"Mapppps\"\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"PlaceDetails\",\n          component: PlaceDetails,\n          options: {\n            title: \"Loading Place...\"\n          }\n        })]\n      })\n    })]\n  });\n}","map":{"version":3,"sources":["C:/Users/jimpe/Desktop/react_native_apps/BarcelonaApp/App.js"],"names":["StatusBar","NavigationContainer","createNativeStackNavigator","IconButton","SpainIcon","Colors","useEffect","useState","AppLoading","HomeScreen","GaudiScreen","AllPlaces","AddPlace","Map","PlaceDetails","init","Stack","App","headerStyle","opacity","backgroundColor","primary500","headerTintColor","headerTitleStyle","allignItems","fontWeight","headerTitleAlign","navigation","title","headerLeft","tintColor","navigate","header","headerRight"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { NavigationContainer } from \"@react-navigation/native\"\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\"\nimport IconButton from \"./Components/UI/IconButton\"\nimport SpainIcon from \"./Components/UI/SpainIcon\"\nimport { Colors } from \"./constants/colors\"\nimport { useEffect, useState } from \"react\"\nimport AppLoading from \"expo-app-loading\"\n\nimport HomeScreen from \"./Screens/HomeScreen\"\nimport GaudiScreen from \"./Screens/GaudiScreen\"\nimport AllPlaces from \"./Screens/AllPlaces\"\nimport AddPlace from \"./Screens/AddPlace\"\nimport Map from \"./Screens/Map\"\nimport PlaceDetails from \"./Screens/PlaceDetails\"\nimport { init } from \"./util/database\"\n\nconst Stack = createNativeStackNavigator()\n\nexport default function App() {\n  // const [dbInitialized, setDbInitialized] = useState(false)\n\n  // useEffect(() => {\n  //   init()\n  //     .then(() => {\n  //       setDbInitialized(true)\n  //   })\n  //     .catch(err => {\n  //     console.log(err)\n  //   })\n  // }, [])\n\n  // if (!dbInitialized) {\n  //   return <AppLoading />\n  // }\n\n  return (\n    <>\n      <StatusBar style=\"light\" />\n        <NavigationContainer>\n          <Stack.Navigator \n            screenOptions={{\n              headerStyle: { \n                opacity: .3,\n                backgroundColor: Colors.primary500\n              },\n              headerTintColor: \"white\",\n              // contentStyle: { backgroundColor: Colors.primary200},\n              headerTitleStyle: {\n                allignItems: \"center\",\n                fontWeight: \"600\",\n              },\n              headerTitleAlign: \"center\",\n            }}\n            >\n            <Stack.Screen \n              name=\"Barcelona App\" \n              component={HomeScreen} \n              screenOptions={{\n                headerStyle: {opacity: .5}\n              }}\n              options={({navigation}) => ({\n                title: \"  Visit Barcelona!\",\n                headerLeft: ({tintColor}) => ( \n                  <SpainIcon\n                    onPress={() => navigation.navigate(\"AllPlaces\")}\n                  />\n                )\n              })}\n              />\n              <Stack.Screen \n                name=\"Gaudi's Works\" \n                component={GaudiScreen} \n                options={({navigation}) => ({\n                  title: \"Explore Antoni Gaudi's Works\",\n                  header: ({tintColor}) => ( \n                    <IconButton\n                      icon=\"heart\"\n                      size={30}\n                      color={tintColor}\n                      onPress={() => navigation.navigate(\"GaudiScreen\")}\n                    />\n                  )\n                })}\n              />\n            <Stack.Screen \n              name=\"AllPlaces\" \n              component={AllPlaces} \n              options={({navigation}) => ({\n                title: \"Your Favorite Places\", \n                headerRight: ({tintColor}) => (\n                  <IconButton \n                    icon=\"add\" \n                    size={24} \n                    color={tintColor}\n                    onPress={() => navigation.navigate(\"AddPlace\")}\n                  \n                  />\n                ),\n              })}  \n              />\n            <Stack.Screen \n              name=\"AddPlace\" \n              component={AddPlace} \n              options={{\n                title: \"Add a new Place\",\n              }}\n              />\n            <Stack.Screen \n              name=\"Map\"\n              component={Map}\n              options={{\n                title: \"Mapppps\",\n              }} \n              />\n            <Stack.Screen\n              name=\"PlaceDetails\" \n              component={PlaceDetails}\n              options={{\n                title: \"Loading Place...\",\n              }}\n             />\n          </Stack.Navigator>\n        </NavigationContainer>\n\n    </>\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}